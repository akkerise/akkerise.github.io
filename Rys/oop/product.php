<?php
/**
 * Created by PhpStorm.
 * User: nguyenthanh
 * Date: 8/6/16
 * Time: 14:39
 */
include "database.php";

class product extends database
{
    private $table = 'products';

    // Hàm này không cần khai báo mà hiển nhiên hàm class này kế thừa của database vì thuộc tính extends
    public function __construct()
    {
        parent::__construct();
    }

    public function getAll($table)
    {
        return parent::getAll($table);

    }

    public function getAllProduct()
    {
        $sql = "SELECT * FROM " . $this->table;
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->execute();
            $result = $this->stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die($e->getMessage());
        }
        return $result;
    }

    public function getAllProductPrice($product_price)
    {
        $sql = "SELECT * FROM " . $this->table . " WHERE product_price=:product_price";
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->bindValue(":product_price",$product_price,PDO::PARAM_STR);
            $this->stmt->execute();
            $result = $this->stmt->fetchAll(PDO::FETCH_ASSOC);
        }catch (PDOException $e){
            die($e->getMessage());
        }
        return $result;
    }




    public function getItemsById($table, $id)
    {
        return parent::getItemsById($table, $id); // TODO: Change the autogenerated stub
    }

    public function insertProduct($product_name, $product_price, $product_description, $link_image)
    {
        $sql = "INSERT INTO " . $this->table . "(product_name , product_price , product_description ,link_image) VALUES (?,?,?)";
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->bindValue(1, $product_name, PDO::PARAM_STR);
            $this->stmt->bindValue(2, $product_price, PDO::PARAM_STR);
            $this->stmt->bindValue(3, $product_description, PDO::PARAM_STR);
            $this->stmt->bindValue(4, $link_image, PDO::PARAM_STR);
            $this->stmt->setAttribute(PDO::ERRMODE_EXCEPTION, PDO::ERRMODE_WARNING);
            $result = $this->stmt->execute();
        } catch (PDOException $e) {
            die($e->getMessage());
        }
        return $result;
    }


    public function updateProduct($id, $product_name, $product_price, $product_description, $link_image)
    {
        $sql = "SELECT * FROM " . $this->table . "SET product_name=:produc_name,product_price=:product_price,product_description=:product_description,link_image=:link_image WHERE id =:id";
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->bindValue(":product_name", $product_name, PDO::PARAM_STR);
            $this->stmt->bindValue(":product_price", $product_price, PDO::PARAM_STR);
            $this->stmt->bindValue(":product_description", $product_description, PDO::PARAM_STR);
            $this->stmt->bindValue(":link_image,$link_image", PDO::PARAM_STR);
            $this->stmt->bindValue(":product_name", $product_name, PDO::PARAM_STR);
            $this->stmt->bindValue(":id", $id, PDO::PARAM_INT);
            $result = $this->stmt->execute();
        } catch (PDOException $e) {
            die($e->getMessage());
        }
        return $result;
    }

    public function deleteProduct($id)
    {
        $sql = "DELETE FROM " . $this->table . " WHERE id = ?";
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->bindValue(1, $id, PDO::PARAM_INT);
            $result = $this->stmt->execute();
        } catch (PDOException $e) {
            die($e->getMessage());
        }
        return $result;
    }

    public function searchProduct($product_name)
    {
        $sql = "SELECT * FROM " . $this->table . " WHERE product_name LIKE ?";
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->bindValue(1, $product_name, PDO::PARAM_STR);
            $this->stmt->execute();
            $result = $this->stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die($e->getMessage());
        }
        return $result;
    }

    public function getProductDescription($product_description){
        $sql = " SELECT * FROM " . $this->table . " WHERE product_description = ? ";
        try {
            $this->stmt = $this->conn->prepare($sql);
            $this->stmt->bindValue(1,$product_description,PDO::PARAM_STR);
            $this->stmt->execute();
            $result = $this->stmt->fetch(PDO::FETCH_ASSOC);
        }catch (PDOException $e){
            die($e->getMessage());
        }
        return $result;
    }

    public function getProductLinkImage($link_image){

    }
}
